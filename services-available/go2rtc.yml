version: '3'

networks:
  default:
    name: traefik
    
# https://github.com/AlexxIT/go2rtc

services:
  go2rtc:
    image: alexxit/go2rtc:${GO2RTC_DOCKER_TAG:-latest}
    container_name: ${GO2RTC_CONTAINER_NAME:-go2rtc} 
    restart: ${GO2RTC_RESTART:-unless-stopped}
    volumes:
      - ./etc/go2rtc:/config
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ}
    # Enable the ports if you have issues getting your stream working
    # ports:
    #   - "8554:8554" # RTSP feeds
    #   - "8555:8555/tcp" # WebRTC over tcp
    #   - "8555:8555/udp" # WebRTC over udp
    labels:
      - joyride.host.name=${GO2RTC_CONTAINER_NAME:-go2rtc}.${HOST_DOMAIN}
      - traefik.enable=true
      - traefik.http.routers.go2rtc.entrypoints=websecure
      - traefik.http.routers.go2rtc.rule=Host(`${GO2RTC_CONTAINER_NAME:-go2rtc}.${HOST_DOMAIN}`)
      #- traefik.http.services.go2rtc.loadbalancer.server.scheme=https # enable if the service wants to connect over https
      - traefik.http.services.go2rtc.loadbalancer.server.port=1984
      - com.centurylinklabs.watchtower.enable=true
      - autoheal=true

      # Flame dashboard labels
      
      - flame.type=application # "app" works too
      - flame.name=${GO2RTC_FLAME_NAME:-go2rtc} 
      - flame.url=https://${GO2RTC_CONTAINER_NAME:-go2rtc}.${HOST_DOMAIN}
      - flame.icon=${GO2RTC_FLAME_ICON:-docker} # optional, default is "docker"